Traceback (most recent call last):
  File "/Users/instructorzamora/miniconda3/envs/ml_venv/lib/python3.9/site-packages/jupyter_core/utils/__init__.py", line 154, in wrapped
    asyncio.get_running_loop()
RuntimeError: no running event loop

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/instructorzamora/miniconda3/envs/ml_venv/lib/python3.9/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/Users/instructorzamora/miniconda3/envs/ml_venv/lib/python3.9/site-packages/nbclient/client.py", line 1319, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/Users/instructorzamora/miniconda3/envs/ml_venv/lib/python3.9/site-packages/jupyter_core/utils/__init__.py", line 158, in wrapped
    return loop.run_until_complete(inner)
  File "/Users/instructorzamora/miniconda3/envs/ml_venv/lib/python3.9/asyncio/base_events.py", line 647, in run_until_complete
    return future.result()
  File "/Users/instructorzamora/miniconda3/envs/ml_venv/lib/python3.9/site-packages/nbclient/client.py", line 709, in async_execute
    await self.async_execute_cell(
  File "/Users/instructorzamora/miniconda3/envs/ml_venv/lib/python3.9/site-packages/nbclient/client.py", line 1062, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/Users/instructorzamora/miniconda3/envs/ml_venv/lib/python3.9/site-packages/nbclient/client.py", line 918, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
# ================= PASO 5: Riesgo, RR y RD con IC95% (sin warnings) =================
import pandas as pd, numpy as np
from math import sqrt, log, exp
from scipy.stats import norm

COL_Y = 'y_asfixia'
Z = (train_prep if 'train_prep' in globals() else df).copy()
Z = Z[Z[COL_Y].isin([0,1])].copy()

z = norm.ppf(0.975)

def wilson_ci(a, n, z=z):
    if n == 0: return (0.0, 0.0, np.nan)
    p = a/n
    denom = 1 + z*z/n
    center = (p + z*z/(2*n)) / denom
    half = z * sqrt((p*(1-p) + z*z/(4*n))/n) / denom
    lo, hi = max(0.0, center - half), min(1.0, center + half)
    return (lo, hi, p)

def rr_ci(a, n, c, m, z=z):
    if n==0 or m==0 or a==0 or c==0:
        a, c = a+0.5, c+0.5
        n, m = n+1.0, m+1.0
    rr = (a/n) / (c/m)
    se = sqrt(1/a - 1/n + 1/c - 1/m)
    lo, hi = exp(log(rr) - z*se), exp(log(rr) + z*se)
    return rr, lo, hi

def rd_ci_wilson(a, n, c, m, z=z):
    L1, U1, p1 = wilson_ci(a, n, z)
    L0, U0, p0 = wilson_ci(c, m, z)
    rd = p1 - p0
    lo, hi = (L1 - U0, U1 - L0)
    return rd, lo, hi, p1, p0

def riesgo_por_categoria(df, x, y=COL_Y, ref=None):
    g = (df[[x,y]].dropna()
         .groupby(x, dropna=False)[y]
         .agg(a='sum', n='count')
         .reset_index().rename(columns={x:'Categoria'}))
    if g.empty:
        return pd.DataFrame(columns=['Categoria','n','Casos','Riesgo%','IC95%_Riesgo','Î”Riesgo(p.p.)','IC95%_Î”Riesgo','RR','IC95%_RR','ref'])
    if ref is None:
        ref = g.sort_values('n', ascending=False).iloc[0]['Categoria']
    ref_row = g.loc[g['Categoria']==ref].iloc[0]
    a0 = int(ref_row['a']); n0 = int(ref_row['n'])
    rows = []
    for _, r in g.iterrows():
        cat = r['Categoria']; a = int(r['a']); n = int(r['n'])
        Lp, Up, p = wilson_ci(a, n, z)
        riesgo_pct = 100*p; icp = f"{100*Lp:.1f}â€“{100*Up:.1f}"
        rd, rd_lo, rd_hi, _, _ = rd_ci_wilson(a, n, a0, n0, z)
        rr, rr_lo, rr_hi = rr_ci(a, n, a0, n0, z)
        rows.append({
            'Categoria': cat, 'n': n, 'Casos': a,
            'Riesgo%': round(riesgo_pct, 1),
            'IC95%_Riesgo': icp,
            'Î”Riesgo(p.p.)': round(100*rd, 1),
            'IC95%_Î”Riesgo': f"{100*rd_lo:.1f}â€“{100*rd_hi:.1f}",
            'RR': round(rr, 3),
            'IC95%_RR': f"{rr_lo:.2f}â€“{rr_hi:.2f}",
            'ref': '(ref)' if cat == ref else ''
        })
    out = pd.DataFrame(rows).sort_values('Î”Riesgo(p.p.)', key=lambda s: s.abs(), ascending=False).reset_index(drop=True)
    return out

# USO
var_x = 'Sexo de la victima'  # cambia a cualquier categÃ³rica disponible
tabla = riesgo_por_categoria(Z, var_x, COL_Y)
print(f"Variable: {var_x} | n={len(Z):,}  y=1={Z[COL_Y].mean()*100:.1f}%")
display(tabla.style.format({'Riesgo%':'{:.1f}','Î”Riesgo(p.p.)':'{:+.1f}','RR':'{:.3f}'}))

------------------


[0;31m---------------------------------------------------------------------------[0m
[0;31mKeyError[0m                                  Traceback (most recent call last)
Cell [0;32mIn[28], line 70[0m
[1;32m     68[0m [38;5;66;03m# USO[39;00m
[1;32m     69[0m var_x [38;5;241m=[39m [38;5;124m'[39m[38;5;124mSexo de la victima[39m[38;5;124m'[39m  [38;5;66;03m# cambia a cualquier categÃ³rica disponible[39;00m
[0;32m---> 70[0m tabla [38;5;241m=[39m [43mriesgo_por_categoria[49m[43m([49m[43mZ[49m[43m,[49m[43m [49m[43mvar_x[49m[43m,[49m[43m [49m[43mCOL_Y[49m[43m)[49m
[1;32m     71[0m [38;5;28mprint[39m([38;5;124mf[39m[38;5;124m"[39m[38;5;124mVariable: [39m[38;5;132;01m{[39;00mvar_x[38;5;132;01m}[39;00m[38;5;124m | n=[39m[38;5;132;01m{[39;00m[38;5;28mlen[39m(Z)[38;5;132;01m:[39;00m[38;5;124m,[39m[38;5;132;01m}[39;00m[38;5;124m  y=1=[39m[38;5;132;01m{[39;00mZ[COL_Y][38;5;241m.[39mmean()[38;5;241m*[39m[38;5;241m100[39m[38;5;132;01m:[39;00m[38;5;124m.1f[39m[38;5;132;01m}[39;00m[38;5;124m%[39m[38;5;124m"[39m)
[1;32m     72[0m display(tabla[38;5;241m.[39mstyle[38;5;241m.[39mformat({[38;5;124m'[39m[38;5;124mRiesgo[39m[38;5;124m%[39m[38;5;124m'[39m:[38;5;124m'[39m[38;5;132;01m{:.1f}[39;00m[38;5;124m'[39m,[38;5;124m'[39m[38;5;124mÎ”Riesgo(p.p.)[39m[38;5;124m'[39m:[38;5;124m'[39m[38;5;132;01m{:+.1f}[39;00m[38;5;124m'[39m,[38;5;124m'[39m[38;5;124mRR[39m[38;5;124m'[39m:[38;5;124m'[39m[38;5;132;01m{:.3f}[39;00m[38;5;124m'[39m}))

Cell [0;32mIn[28], line 38[0m, in [0;36mriesgo_por_categoria[0;34m(df, x, y, ref)[0m
[1;32m     37[0m [38;5;28;01mdef[39;00m[38;5;250m [39m[38;5;21mriesgo_por_categoria[39m(df, x, y[38;5;241m=[39mCOL_Y, ref[38;5;241m=[39m[38;5;28;01mNone[39;00m):
[0;32m---> 38[0m     g [38;5;241m=[39m ([43mdf[49m[43m[[49m[43m[[49m[43mx[49m[43m,[49m[43my[49m[43m][49m[43m][49m[38;5;241m.[39mdropna()
[1;32m     39[0m          [38;5;241m.[39mgroupby(x, dropna[38;5;241m=[39m[38;5;28;01mFalse[39;00m)[y]
[1;32m     40[0m          [38;5;241m.[39magg(a[38;5;241m=[39m[38;5;124m'[39m[38;5;124msum[39m[38;5;124m'[39m, n[38;5;241m=[39m[38;5;124m'[39m[38;5;124mcount[39m[38;5;124m'[39m)
[1;32m     41[0m          [38;5;241m.[39mreset_index()[38;5;241m.[39mrename(columns[38;5;241m=[39m{x:[38;5;124m'[39m[38;5;124mCategoria[39m[38;5;124m'[39m}))
[1;32m     42[0m     [38;5;28;01mif[39;00m g[38;5;241m.[39mempty:
[1;32m     43[0m         [38;5;28;01mreturn[39;00m pd[38;5;241m.[39mDataFrame(columns[38;5;241m=[39m[[38;5;124m'[39m[38;5;124mCategoria[39m[38;5;124m'[39m,[38;5;124m'[39m[38;5;124mn[39m[38;5;124m'[39m,[38;5;124m'[39m[38;5;124mCasos[39m[38;5;124m'[39m,[38;5;124m'[39m[38;5;124mRiesgo[39m[38;5;124m%[39m[38;5;124m'[39m,[38;5;124m'[39m[38;5;124mIC95[39m[38;5;124m%[39m[38;5;124m_Riesgo[39m[38;5;124m'[39m,[38;5;124m'[39m[38;5;124mÎ”Riesgo(p.p.)[39m[38;5;124m'[39m,[38;5;124m'[39m[38;5;124mIC95[39m[38;5;124m%[39m[38;5;124m_Î”Riesgo[39m[38;5;124m'[39m,[38;5;124m'[39m[38;5;124mRR[39m[38;5;124m'[39m,[38;5;124m'[39m[38;5;124mIC95[39m[38;5;124m%[39m[38;5;124m_RR[39m[38;5;124m'[39m,[38;5;124m'[39m[38;5;124mref[39m[38;5;124m'[39m])

File [0;32m~/miniconda3/envs/ml_venv/lib/python3.9/site-packages/pandas/core/frame.py:4108[0m, in [0;36mDataFrame.__getitem__[0;34m(self, key)[0m
[1;32m   4106[0m     [38;5;28;01mif[39;00m is_iterator(key):
[1;32m   4107[0m         key [38;5;241m=[39m [38;5;28mlist[39m(key)
[0;32m-> 4108[0m     indexer [38;5;241m=[39m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mcolumns[49m[38;5;241;43m.[39;49m[43m_get_indexer_strict[49m[43m([49m[43mkey[49m[43m,[49m[43m [49m[38;5;124;43m"[39;49m[38;5;124;43mcolumns[39;49m[38;5;124;43m"[39;49m[43m)[49m[[38;5;241m1[39m]
[1;32m   4110[0m [38;5;66;03m# take() does not accept boolean indexers[39;00m
[1;32m   4111[0m [38;5;28;01mif[39;00m [38;5;28mgetattr[39m(indexer, [38;5;124m"[39m[38;5;124mdtype[39m[38;5;124m"[39m, [38;5;28;01mNone[39;00m) [38;5;241m==[39m [38;5;28mbool[39m:

File [0;32m~/miniconda3/envs/ml_venv/lib/python3.9/site-packages/pandas/core/indexes/base.py:6200[0m, in [0;36mIndex._get_indexer_strict[0;34m(self, key, axis_name)[0m
[1;32m   6197[0m [38;5;28;01melse[39;00m:
[1;32m   6198[0m     keyarr, indexer, new_indexer [38;5;241m=[39m [38;5;28mself[39m[38;5;241m.[39m_reindex_non_unique(keyarr)
[0;32m-> 6200[0m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_raise_if_missing[49m[43m([49m[43mkeyarr[49m[43m,[49m[43m [49m[43mindexer[49m[43m,[49m[43m [49m[43maxis_name[49m[43m)[49m
[1;32m   6202[0m keyarr [38;5;241m=[39m [38;5;28mself[39m[38;5;241m.[39mtake(indexer)
[1;32m   6203[0m [38;5;28;01mif[39;00m [38;5;28misinstance[39m(key, Index):
[1;32m   6204[0m     [38;5;66;03m# GH 42790 - Preserve name from an Index[39;00m

File [0;32m~/miniconda3/envs/ml_venv/lib/python3.9/site-packages/pandas/core/indexes/base.py:6252[0m, in [0;36mIndex._raise_if_missing[0;34m(self, key, indexer, axis_name)[0m
[1;32m   6249[0m     [38;5;28;01mraise[39;00m [38;5;167;01mKeyError[39;00m([38;5;124mf[39m[38;5;124m"[39m[38;5;124mNone of [[39m[38;5;132;01m{[39;00mkey[38;5;132;01m}[39;00m[38;5;124m] are in the [[39m[38;5;132;01m{[39;00maxis_name[38;5;132;01m}[39;00m[38;5;124m][39m[38;5;124m"[39m)
[1;32m   6251[0m not_found [38;5;241m=[39m [38;5;28mlist[39m(ensure_index(key)[missing_mask[38;5;241m.[39mnonzero()[[38;5;241m0[39m]][38;5;241m.[39munique())
[0;32m-> 6252[0m [38;5;28;01mraise[39;00m [38;5;167;01mKeyError[39;00m([38;5;124mf[39m[38;5;124m"[39m[38;5;132;01m{[39;00mnot_found[38;5;132;01m}[39;00m[38;5;124m not in index[39m[38;5;124m"[39m)

[0;31mKeyError[0m: "['Sexo de la victima'] not in index"

